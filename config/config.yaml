main:
  download_repository: "https://github.com/Dyrutter/anime_recommendations#download"  
  project_name: anime_recommendations
  experiment_name: development
  execute_steps:
    - download
    - preprocess
    - neural_network
    - similar_anime
    - similar_users
    #- recommendation
    #- API
  random_seed: 42

data:
  stats_url: "https://github.com/Dyrutter/anime_recommendations/blob/main/data/user_stats.parquet?raw=True"
  synopses_url: "https://github.com/Dyrutter/anime_recommendations/blob/main/data/synopses.csv?raw=True"
  all_anime_url: "https://github.com/Dyrutter/anime_recommendations/blob/main/data/all_anime.csv?raw=True"

  stats_artifact: "full_data_set.parquet"
  stats_artifact_type: "raw_data"
  stats_artifact_description: "Main statistics file."
  stats_artifact_latest: "full_data_set.parquet:v0"

  synopses_artifact: "synopses.csv"
  synopses_artifact_type: "raw_data"
  synopses_artifact_description: "File containing synopses"
  sypnopses_artifact_latest: "synopses.csv:latest"

  all_anime_artifact: "all_anime.csv"
  all_anime_type: "raw_data"
  all_anime_description: "File containing descriptive stats for all anime"
  all_anime_artifact_latest: "all_anime.csv:latest"

  preprocessed_stats: "preprocessed_stats.parquet"
  preprocessed_artifact_type: "preprocessed_data"
  preprocessed_artifact_description: "Preprocessed stats file to be used for model training"
  preprocessed_artifact_latest: "preprocessed_stats.parquet:v2" # Currently with <400 reviews removed

  num_reviews: 400
  drop_half_watched: False
  drop_unwatched: False
  drop_plan: False

  save_raw_locally: False
  save_clean_locally: False
  from_local: True # Use local raw data for download step
  local_fname: '/Applications/python_files/anime_recommendations/data/animelist.csv' # Filename of local raw data

model:
  test_size: 10000
  kernel_initializer: 'he_normal'
  TPU_INIT: False
  start_lr: 0.00001
  min_lr: 0.00001
  max_lr: 0.00005
  batch_size: 10000
  rampup_epochs: 5
  sustain_epochs: 0
  exp_decay: 0.8
  embedding_size: 128
  model_loss: 'binary_crossentropy'
  optimizer: 'Adam'
  weights_artifact: 'wandb_main_weights.h5'
  epochs: 20
  activation_function: 'sigmoid'
  checkpoint_metric: 'val_loss'
  save_weights_only: True
  save_best_weights: True
  save_freq: 'epoch'
  save_model: True
  model_name: './wandb_anime_nn.h5' # Path to use if you want to save model to your local machine
  verbose: 1
  model_artifact: 'wandb_anime_nn.h5' # Artifact name for the model
  history_csv: 'wandb_anime_nn_history.csv'
  monitor: 'val_loss'
  mode: 'min'
  anime_weights: 'wandb_anime_weights.csv' # Numpy array of anime weights
  user_weights: 'wandb_user_weights.csv' # Numpy array of user weights
  an_weights_fn: './wandb_anime_weights.csv'
  id_weights_fn: './wandb_user_weights.csv'

nn_arts:
  main_anime_weights: "wandb_anime_weights.csv:v2"
  main_user_weights: "wandb_user_weights.csv:v2"
  main_weights_art: "wandb_anime_weights.h5:v8"
  main_history: "wandb_anime_nn_history.csv:v8"
  main_model: "wandb_anime_nn.h5:v6"

similarity:
  anime_query: "Rental Magica"
  a_query_number: 10 # Number of similar anime to return
  user_query: 10000
  id_query_number: 10
  max_ratings: 600 # Limit to this many ratings if random_user is True
  random_user: False
